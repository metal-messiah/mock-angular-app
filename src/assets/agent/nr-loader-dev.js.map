{"version":3,"sources":["node_modules/browser-pack/_prelude.js","feature/err/instrument/debug.js","feature/err/instrument/index.js","feature/ins/instrument/index.js","feature/spa/instrument/index.js","feature/stn/instrument/index.js","feature/wrap-events.js","feature/wrap-fetch.js","feature/wrap-history.js","feature/wrap-jsonp.js","feature/wrap-mutation.js","feature/wrap-promise.js","feature/wrap-raf.js","feature/wrap-timer.js","feature/wrap-xhr.js","feature/xhr/instrument/distributed-tracing.js","feature/xhr/instrument/index.js","feature/xhr/instrument/parse-url.js","feature/xhr/instrument/response-size.js","loader/api.js","loader/config.js","loader/data-size.js","loader/firefox-version.js","loader/now.js","loader/protocol-allowed.js","loader/timings.js","loader/unique-id.js","loader/user-agent.js","loader/visibility.js","map-own/index.js","node_modules/lodash._slice/index.js","performance-check/index.js","ee","gos","handle","id","loader","wrap-function"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvfile":"nr-loader-dev.js","sourceRoot":"/source/","sourcesContent":["// prelude.js edited from: https://github.com/substack/browser-pack/blob/master/prelude.js\n\n// modules are defined as an array\n// [ module function, map of requireuires ]\n//\n// map of requireuires is short require name -> numeric require\n\n(function (modules, cache, entry) { // eslint-disable-line no-extra-parens\n  function newRequire (name) {\n    if (!cache[name]) {\n      var m = cache[name] = {exports: {}}\n      modules[name][0].call(m.exports, function (x) {\n        var id = modules[name][1][x]\n        return newRequire(id || x)\n      }, m, m.exports)\n    }\n    return cache[name].exports\n  }\n\n  // If there is already an agent on the page, use it instead.\n  if (typeof __nr_require === 'function') return __nr_require\n\n  for (var i = 0; i < entry.length; i++) newRequire(entry[i])\n\n  return newRequire\n})\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\")\nvar mapOwn = require(29)\nvar flags = {}\nvar flagArr\n\ntry {\n  flagArr = localStorage.getItem('__nr_flags').split(',')\n  if (console && typeof console.log === 'function') {\n    flags.console = true\n    if (flagArr.indexOf('dev') !== -1) flags.dev = true\n    if (flagArr.indexOf('nr_dev') !== -1) flags.nrDev = true\n  }\n} catch (err) {\n // no op\n}\n\nif (flags.nrDev) ee.on('internal-error', function (err) { log(err.stack) })\nif (flags.dev) ee.on('fn-err', function (args, origThis, err) { log(err.stack) })\nif (flags.dev) {\n  log('NR AGENT IN DEVELOPMENT MODE')\n  log('flags: ' + mapOwn(flags, function (key, val) { return key }).join(', '))\n}\n\nfunction log (message) {\n  try {\n    if (flags.console) console.log(message)\n  } catch (err) {\n    // no op\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar handle = require(\"handle\")\nvar slice = require(30)\nvar ee = require(\"ee\")\nvar loader = require(\"loader\")\nvar getOrSet = require(\"gos\")\nvar origOnerror = window.onerror\nvar handleErrors = false\nvar NR_ERR_PROP = 'nr@seenError'\n\nif (loader.disabled) return\n\n// skipNext counter to keep track of uncaught\n// errors that will be the same as caught errors.\nvar skipNext = 0\n\n// Declare that we are using err instrumentation\nloader.features.err = true\nrequire(1)\n\nwindow.onerror = onerrorHandler\n\ntry {\n  throw new Error()\n} catch (e) {\n  // Only wrap stuff if try/catch gives us useful data. It doesn't in IE < 10.\n  if ('stack' in e) {\n    require(13)\n    require(12)\n\n    if ('addEventListener' in window) {\n      require(6)\n    }\n\n    if (loader.xhrWrappable) {\n      require(14)\n    }\n\n    handleErrors = true\n  }\n}\n\nee.on('fn-start', function (args, obj, methodName) {\n  if (handleErrors) skipNext += 1\n})\n\nee.on('fn-err', function (args, obj, err) {\n  if (handleErrors && !err[NR_ERR_PROP]) {\n    getOrSet(err, NR_ERR_PROP, function getVal () {\n      return true\n    })\n    this.thrown = true\n    notice(err)\n  }\n})\n\nee.on('fn-end', function () {\n  if (!handleErrors) return\n  if (!this.thrown && skipNext > 0) skipNext -= 1\n})\n\nee.on('internal-error', function (e) {\n  handle('ierr', [e, loader.now(), true])\n})\n\n// FF and Android browsers do not provide error info to the 'error' event callback,\n// so we must use window.onerror\nfunction onerrorHandler (message, filename, lineno, column, errorObj) {\n  try {\n    if (skipNext) skipNext -= 1\n    else notice(errorObj || new UncaughtException(message, filename, lineno), true)\n  } catch (e) {\n    try {\n      handle('ierr', [e, loader.now(), true])\n    } catch (err) {\n    }\n  }\n\n  if (typeof origOnerror === 'function') return origOnerror.apply(this, slice(arguments))\n  return false\n}\n\nfunction UncaughtException (message, filename, lineno) {\n  this.message = message || 'Uncaught error with no additional information'\n  this.sourceURL = filename\n  this.line = lineno\n}\n\n// emits 'handle > error' event, which the error aggregator listens on\nfunction notice (err, doNotStamp) {\n  // by default add timestamp, unless specifically told not to\n  // this is to preserve existing behavior\n  var time = (!doNotStamp) ? loader.now() : null\n  handle('err', [err, time])\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Turn on feature\nvar loader = require(\"loader\")\n\nif (loader.disabled) return\nloader.features.ins = true\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar START = '-start'\nvar END = '-end'\nvar BODY = '-body'\nvar FN_START = 'fn' + START\nvar FN_END = 'fn' + END\nvar CB_START = 'cb' + START\nvar CB_END = 'cb' + END\nvar JS_TIME = 'jsTime'\nvar FETCH = 'fetch'\nvar ADD_EVENT_LISTENER = 'addEventListener'\n\nvar win = window\nvar location = win.location\n\nvar loader = require(\"loader\")\n\n// loader.xhrWrappable will be false in chrome for ios, but addEventListener is still available.\n// sauce does not have a browser to test this case against, so be careful when modifying this check\nif (!win[ADD_EVENT_LISTENER] || !loader.xhrWrappable || loader.disabled) return\n\nvar mutationEE = require(10)\nvar promiseEE = require(11)\nvar historyEE = require(8)\nvar eventsEE = require(6)\nvar timerEE = require(13)\nvar fetchEE = require(7)\nvar xhrEE = require(14)\nvar jsonpEE = require(9)\nvar baseEE = require(\"ee\")\nvar tracerEE = baseEE.get('tracer')\n\nrequire(16)\nloader.features.spa = true\n\n// Get after wrapping\nvar depth = 0\nvar startHash\n\nbaseEE.on(FN_START, startTimestamp)\npromiseEE.on(CB_START, startTimestamp)\njsonpEE.on(CB_START, startTimestamp)\n\nfunction startTimestamp () {\n  depth++\n  startHash = location.hash\n  this[FN_START] = loader.now()\n}\n\nbaseEE.on(FN_END, endTimestamp)\npromiseEE.on(CB_END, endTimestamp)\njsonpEE.on(CB_END, endTimestamp)\n\nfunction endTimestamp () {\n  depth--\n  if (location.hash !== startHash) {\n    trackURLChange(0, true)\n  }\n\n  var time = loader.now()\n  this[JS_TIME] = (~~this[JS_TIME]) + time - this[FN_START]\n  this[FN_END] = time\n}\n\nbaseEE.buffer([FN_START, FN_END, 'xhr-done', 'xhr-resolved'])\neventsEE.buffer([FN_START])\ntimerEE.buffer(['setTimeout' + END, 'clearTimeout' + START, FN_START])\nxhrEE.buffer([FN_START, 'new-xhr', 'send-xhr' + START])\nfetchEE.buffer([FETCH + START, FETCH + '-done', FETCH + BODY + START, FETCH + BODY + END])\nhistoryEE.buffer(['newURL'])\nmutationEE.buffer([FN_START])\npromiseEE.buffer(['propagate', CB_START, CB_END, 'executor-err', 'resolve' + START])\ntracerEE.buffer([FN_START, 'no-' + FN_START])\njsonpEE.buffer(['new-jsonp', 'cb-start', 'jsonp-error', 'jsonp-end'])\n\ntimestamp(xhrEE, 'send-xhr' + START)\ntimestamp(baseEE, 'xhr-resolved')\ntimestamp(baseEE, 'xhr-done')\ntimestamp(fetchEE, FETCH + START)\ntimestamp(fetchEE, FETCH + '-done')\ntimestamp(jsonpEE, 'new-jsonp')\ntimestamp(jsonpEE, 'jsonp-end')\ntimestamp(jsonpEE, 'cb-start')\n\nhistoryEE.on('pushState-end', trackURLChange)\nhistoryEE.on('replaceState-end', trackURLChange)\n\nfunction trackURLChange (unusedArgs, hashChangedDuringCb) {\n  historyEE.emit('newURL', ['' + location, hashChangedDuringCb])\n}\n\nwin[ADD_EVENT_LISTENER]('hashchange', trackURLChange, true)\nwin[ADD_EVENT_LISTENER]('load', trackURLChange, true)\n\nwin[ADD_EVENT_LISTENER]('popstate', function () {\n  trackURLChange(0, depth > 1)\n}, true)\n\nfunction timestamp (ee, type) {\n  ee.on(type, function () {\n    this[type] = loader.now()\n  })\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nif (!(window.performance &&\n  window.performance.timing &&\n  window.performance.getEntriesByType\n  )) return\n\nvar ee = require(\"ee\")\nvar handle = require(\"handle\")\nvar timerEE = require(13)\nvar rafEE = require(12)\n\nvar learResourceTimings = 'learResourceTimings'\nvar ADD_EVENT_LISTENER = 'addEventListener'\nvar RESOURCE_TIMING_BUFFER_FULL = 'resourcetimingbufferfull'\nvar BST_RESOURCE = 'bstResource'\nvar RESOURCE = 'resource'\nvar START = '-start'\nvar END = '-end'\nvar FN_START = 'fn' + START\nvar FN_END = 'fn' + END\nvar BST_TIMER = 'bstTimer'\nvar PUSH_STATE = 'pushState'\n\n// Turn on feature harvesting\nvar loader = require(\"loader\")\nif (loader.disabled) return\n\nloader.features.stn = true\n\n// wrap history ap\nrequire(8)\n\n// wrap events\nif ('addEventListener' in window) {\n  require(6)\n}\n\n// Cache the value of window.Event for later instanceof checks, in case someone\n// overwrites it to be a non-function.\nvar origEvent = NREUM.o.EV\n\nee.on(FN_START, function (args, target) {\n  var evt = args[0]\n  if (evt instanceof origEvent) {\n    this.bstStart = loader.now()\n  }\n})\n\nee.on(FN_END, function (args, target) {\n  var evt = args[0]\n  if (evt instanceof origEvent) {\n    handle('bst', [evt, target, this.bstStart, loader.now()])\n  }\n})\n\ntimerEE.on(FN_START, function (args, obj, type) {\n  this.bstStart = loader.now()\n  this.bstType = type\n})\n\ntimerEE.on(FN_END, function (args, target) {\n  handle(BST_TIMER, [target, this.bstStart, loader.now(), this.bstType])\n})\n\nrafEE.on(FN_START, function () {\n  this.bstStart = loader.now()\n})\n\nrafEE.on(FN_END, function (args, target) {\n  handle(BST_TIMER, [target, this.bstStart, loader.now(), 'requestAnimationFrame'])\n})\n\nee.on(PUSH_STATE + START, function (args) {\n  this.time = loader.now()\n  this.startPath = location.pathname + location.hash\n})\nee.on(PUSH_STATE + END, function (args) {\n  handle('bstHist', [location.pathname + location.hash, this.startPath, this.time])\n})\n\nif (ADD_EVENT_LISTENER in window.performance) {\n  if (window.performance['c' + learResourceTimings]) {\n    window.performance[ADD_EVENT_LISTENER](RESOURCE_TIMING_BUFFER_FULL, function (e) {\n      handle(BST_RESOURCE, [window.performance.getEntriesByType(RESOURCE)])\n      window.performance['c' + learResourceTimings]()\n    }, false)\n  } else {\n    window.performance[ADD_EVENT_LISTENER]('webkit' + RESOURCE_TIMING_BUFFER_FULL, function (e) {\n      handle(BST_RESOURCE, [window.performance.getEntriesByType(RESOURCE)])\n      window.performance['webkitC' + learResourceTimings]()\n    }, false)\n  }\n}\n\ndocument[ADD_EVENT_LISTENER]('scroll', noOp, {passive: true})\ndocument[ADD_EVENT_LISTENER]('keypress', noOp, false)\ndocument[ADD_EVENT_LISTENER]('click', noOp, false)\n\nfunction noOp (e) { /* no-op */ }\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('events')\nvar wrapFn = require(\"wrap-function\")(ee, true)\nvar getOrSet = require(\"gos\")\n\nvar XHR = XMLHttpRequest\nvar ADD_EVENT_LISTENER = 'addEventListener'\nvar REMOVE_EVENT_LISTENER = 'removeEventListener'\n\nmodule.exports = ee\n\n// Guard against instrumenting environments w/o necessary features\nif ('getPrototypeOf' in Object) {\n  findAndWrapNode(document)\n  findAndWrapNode(window)\n  findAndWrapNode(XHR.prototype)\n} else if (XHR.prototype.hasOwnProperty(ADD_EVENT_LISTENER)) {\n  wrapNode(window)\n  wrapNode(XHR.prototype)\n}\n\nee.on(ADD_EVENT_LISTENER + '-start', function (args, target) {\n  var originalListener = args[1]\n\n  var wrapped = getOrSet(originalListener, 'nr@wrapped', function () {\n    var listener = {\n      object: wrapHandleEvent,\n      'function': originalListener\n    }[typeof originalListener]\n\n    return listener ? wrapFn(listener, 'fn-', null, (listener.name || 'anonymous')) : originalListener\n\n    function wrapHandleEvent () {\n      if (typeof originalListener.handleEvent !== 'function') return\n      return originalListener.handleEvent.apply(originalListener, arguments)\n    }\n  })\n\n  this.wrapped = args[1] = wrapped\n})\n\nee.on(REMOVE_EVENT_LISTENER + '-start', function (args) {\n  args[1] = this.wrapped || args[1]\n})\n\nfunction findAndWrapNode (object) {\n  var step = object\n  while (step && !step.hasOwnProperty(ADD_EVENT_LISTENER)) { step = Object.getPrototypeOf(step) }\n  if (step) { wrapNode(step) }\n}\n\nfunction wrapNode (node) {\n  wrapFn.inPlace(node, [ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER], '-', uniqueListener)\n}\n\nfunction uniqueListener (args, obj) {\n  // Context for the listener is stored on itself.\n  return args[1]\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('fetch')\nvar slice = require(30)\nvar mapOwn = require(29)\n\nmodule.exports = ee\n\nvar win = window\nvar prefix = 'fetch-'\nvar bodyPrefix = prefix + 'body-'\nvar bodyMethods = ['arrayBuffer', 'blob', 'json', 'text', 'formData']\nvar Req = win.Request\nvar Res = win.Response\nvar fetch = win.fetch\nvar proto = 'prototype'\nvar ctxId = 'nr@context'\n\nif (!(Req && Res && fetch)) {\n  return\n}\n\nmapOwn(bodyMethods, function (i, name) {\n  wrapPromiseMethod(Req[proto], name, bodyPrefix)\n  wrapPromiseMethod(Res[proto], name, bodyPrefix)\n})\n\nwrapPromiseMethod(win, 'fetch', prefix)\n\nee.on(prefix + 'end', function (err, res) {\n  var ctx = this\n  if (res) {\n    var size = res.headers.get('content-length')\n    if (size !== null) {\n      ctx.rxSize = size\n    }\n    ee.emit(prefix + 'done', [null, res], ctx)\n  } else {\n    ee.emit(prefix + 'done', [err], ctx)\n  }\n})\n\nfunction wrapPromiseMethod (target, name, prefix) {\n  var fn = target[name]\n  if (typeof fn === 'function') {\n    target[name] = function () {\n      var args = slice(arguments)\n\n      var ctx = {}\n      // we are wrapping args in an array so we can preserve the reference\n      ee.emit(prefix + 'before-start', [args], ctx)\n      var dtPayload\n      if (ctx[ctxId] && ctx[ctxId].dt) dtPayload = ctx[ctxId].dt\n\n      var promise = fn.apply(this, args)\n\n      ee.emit(prefix + 'start', [args, dtPayload], promise)\n\n      return promise.then(function (val) {\n        ee.emit(prefix + 'end', [null, val], promise)\n        return val\n      }, function (err) {\n        ee.emit(prefix + 'end', [err], promise)\n        throw err\n      })\n    }\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// History pushState wrapper\nvar ee = require(\"ee\").get('history')\nvar wrapFn = require(\"wrap-function\")(ee)\n\nmodule.exports = ee\n\nvar prototype = window.history && window.history.constructor && window.history.constructor.prototype\nvar object = window.history\nif (prototype && prototype.pushState && prototype.replaceState) {\n  object = prototype\n}\nwrapFn.inPlace(object, [ 'pushState', 'replaceState' ], '-')\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('jsonp')\nvar wrapFn = require(\"wrap-function\")(ee)\n\nmodule.exports = ee\n\nif (!shouldWrap()) return\n\nvar CALLBACK_REGEX = /[?&](?:callback|cb)=([^&#]+)/\nvar PARENT_REGEX = /(.*)\\.([^.]+)/\nvar VALUE_REGEX = /^(\\w+)(\\.|$)(.*)$/\nvar domInsertMethods = ['appendChild', 'insertBefore', 'replaceChild']\n\n// JSONP works by dynamically inserting <script> elements - wrap DOM methods for\n// inserting elements to detect insertion of JSONP-specific elements.\nif (Node && Node.prototype && Node.prototype.appendChild) {\n  wrapFn.inPlace(Node.prototype, domInsertMethods, 'dom-')\n} else {\n  wrapFn.inPlace(HTMLElement.prototype, domInsertMethods, 'dom-')\n  wrapFn.inPlace(HTMLHeadElement.prototype, domInsertMethods, 'dom-')\n  wrapFn.inPlace(HTMLBodyElement.prototype, domInsertMethods, 'dom-')\n}\n\nee.on('dom-start', function (args) {\n  wrapElement(args[0])\n})\n\n// subscribe to events on the JSONP <script> element and wrap the JSONP callback\n// in order to track start and end of the interaction node\nfunction wrapElement (el) {\n  var isScript = el && typeof el.nodeName === 'string' &&\n    el.nodeName.toLowerCase() === 'script'\n  if (!isScript) return\n\n  var isValidElement = typeof el.addEventListener === 'function'\n  if (!isValidElement) return\n\n  var callbackName = extractCallbackName(el.src)\n  if (!callbackName) return\n\n  var callback = discoverParent(callbackName)\n  var validCallback = typeof callback.parent[callback.key] === 'function'\n  if (!validCallback) return\n\n  // At this point we know that the element is a valid JSONP script element.\n  // The following events are emitted during the lifetime of a JSONP call:\n  // * immediately emit `new-jsonp` to notify start of the JSONP work\n  // * the wrapped callback will emit `cb-start` and `cb-end` during the execution\n  //   of the callback, here we can inspect the response\n  // * when the element emits the `load` event (script loaded and executed),\n  //   emit `jsonp-end` to notify end of the JSONP work\n  // * if the element emits the `error` event, in response emit `jsonp-error`\n  //   (and `jsonp-end`). Note that the callback in this case will likely not get\n  //   called.\n\n  var context = {}\n  wrapFn.inPlace(callback.parent, [callback.key], 'cb-', context)\n\n  el.addEventListener('load', onLoad, false)\n  el.addEventListener('error', onError, false)\n  ee.emit('new-jsonp', [el.src], context)\n\n  function onLoad () {\n    ee.emit('jsonp-end', [], context)\n    el.removeEventListener('load', onLoad, false)\n    el.removeEventListener('error', onError, false)\n  }\n\n  function onError () {\n    ee.emit('jsonp-error', [], context)\n    ee.emit('jsonp-end', [], context)\n    el.removeEventListener('load', onLoad, false)\n    el.removeEventListener('error', onError, false)\n  }\n}\n\nfunction shouldWrap () {\n  return 'addEventListener' in window\n}\n\nfunction extractCallbackName (src) {\n  var matches = src.match(CALLBACK_REGEX)\n  return matches ? matches[1] : null\n}\n\nfunction discoverValue (longKey, obj) {\n  var matches = longKey.match(VALUE_REGEX)\n  var key = matches[1]\n  var remaining = matches[3]\n  if (!remaining) {\n    return obj[key]\n  }\n  return discoverValue(remaining, obj[key])\n}\n\nfunction discoverParent (key) {\n  var matches = key.match(PARENT_REGEX)\n  if (matches && matches.length >= 3) {\n    return {\n      key: matches[2],\n      parent: discoverValue(matches[1], window)\n    }\n  }\n  return {\n    key: key,\n    parent: window\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('mutation')\nvar wrapFn = require(\"wrap-function\")(ee)\nvar OriginalObserver = NREUM.o.MO\n\nmodule.exports = ee\n\nif (OriginalObserver) {\n  window.MutationObserver = function WrappedMutationObserver (cb) {\n    if (this instanceof OriginalObserver) {\n      return new OriginalObserver(wrapFn(cb, 'fn-'))\n    } else {\n      return OriginalObserver.apply(this, arguments)\n    }\n  }\n\n  MutationObserver.prototype = OriginalObserver.prototype\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar wrapFn = require(\"wrap-function\")\nvar promiseEE = require(\"ee\").get('promise')\nvar getContext = require(\"ee\").getOrSetContext\nvar promiseWrapper = wrapFn(promiseEE)\nvar mapOwn = require(29)\nvar OriginalPromise = NREUM.o.PR\n\nmodule.exports = promiseEE\n\nif (!OriginalPromise) return\n\nwindow.Promise = WrappedPromise\n\n;['all', 'race'].forEach(function (method) {\n  var original = OriginalPromise[method]\n  OriginalPromise[method] = function (subPromises) {\n    var finalized = false\n    mapOwn(subPromises, function (i, sub) {\n      Promise.resolve(sub).then(setNrId(method === 'all'), setNrId(false))\n    })\n\n    var originalReturnValue = original.apply(OriginalPromise, arguments)\n    var promise = OriginalPromise.resolve(originalReturnValue)\n\n    return promise\n\n    function setNrId (overwrite) {\n      return function () {\n        promiseEE.emit('propagate', [null, !finalized], originalReturnValue, false, false)\n        finalized = finalized || !overwrite\n      }\n    }\n  }\n})\n\n;['resolve', 'reject'].forEach(function (method) {\n  var original = OriginalPromise[method]\n  OriginalPromise[method] = function (val) {\n    var returnVal = original.apply(OriginalPromise, arguments)\n    if (val !== returnVal) {\n      promiseEE.emit('propagate', [val, true], returnVal, false, false)\n    }\n\n    return returnVal\n  }\n})\n\nOriginalPromise.prototype['catch'] = function wrappedCatch (fn) {\n  return this.then(null, fn)\n}\n\nOriginalPromise.prototype = Object.create(OriginalPromise.prototype, {\n  constructor: {value: WrappedPromise}\n})\n\nmapOwn(Object.getOwnPropertyNames(OriginalPromise), function copy (i, key) {\n  try {\n    WrappedPromise[key] = OriginalPromise[key]\n  } catch (err) {\n    // ignore properties we can't copy\n  }\n})\n\nfunction WrappedPromise (executor) {\n  var ctx = promiseEE.context()\n  var wrappedExecutor = promiseWrapper(executor, 'executor-', ctx, null, false)\n\n  var promise = new OriginalPromise(wrappedExecutor)\n\n  promiseEE.context(promise).getCtx = function () {\n    return ctx\n  }\n\n  return promise\n}\n\nwrapFn.wrapInPlace(OriginalPromise.prototype, 'then', function wrapThen(original) {\n  return function wrappedThen() {\n    var originalThis = this\n    var args = wrapFn.argsToArray.apply(this, arguments)\n\n    var ctx = getContext(originalThis)\n    ctx.promise = originalThis\n    args[0] = promiseWrapper(args[0], 'cb-', ctx, null, false)\n    args[1] = promiseWrapper(args[1], 'cb-', ctx, null, false)\n\n    var result = original.apply(this, args)\n\n    ctx.nextPromise = result\n    promiseEE.emit('propagate', [originalThis, true], result, false, false)\n\n    return result\n  }\n})\n\npromiseEE.on('executor-start', function (args) {\n  args[0] = promiseWrapper(args[0], 'resolve-', this, null, false)\n  args[1] = promiseWrapper(args[1], 'resolve-', this, null, false)\n})\n\npromiseEE.on('executor-err', function (args, originalThis, err) {\n  args[1](err)\n})\n\npromiseEE.on('cb-end', function (args, originalThis, result) {\n  promiseEE.emit('propagate', [result, true], this.nextPromise, false, false)\n})\n\npromiseEE.on('propagate', function (val, overwrite, trigger) {\n  if (!this.getCtx || overwrite) {\n    this.getCtx = function () {\n      if (val instanceof Promise) {\n        var store = promiseEE.context(val)\n      }\n\n      return store && store.getCtx ? store.getCtx() : this\n    }\n  }\n})\n\nWrappedPromise.toString = function () {\n  return '' + OriginalPromise\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Request Animation Frame wrapper\nvar ee = require(\"ee\").get('raf')\nvar wrapFn = require(\"wrap-function\")(ee)\n\nvar equestAnimationFrame = 'equestAnimationFrame'\n\nmodule.exports = ee\n\nwrapFn.inPlace(window, [\n  'r' + equestAnimationFrame,\n  'mozR' + equestAnimationFrame,\n  'webkitR' + equestAnimationFrame,\n  'msR' + equestAnimationFrame\n], 'raf-')\n\nee.on('raf-start', function (args) {\n  // Wrap the callback handed to requestAnimationFrame\n  args[0] = wrapFn(args[0], 'fn-')\n})\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('timer')\nvar wrapFn = require(\"wrap-function\")(ee)\n\nvar SET_TIMEOUT = 'setTimeout'\nvar SET_INTERVAL = 'setInterval'\nvar CLEAR_TIMEOUT = 'clearTimeout'\nvar START = '-start'\nvar DASH = '-'\n\nmodule.exports = ee\n\nwrapFn.inPlace(window, [SET_TIMEOUT, 'setImmediate'], SET_TIMEOUT + DASH)\nwrapFn.inPlace(window, [SET_INTERVAL], SET_INTERVAL + DASH)\nwrapFn.inPlace(window, [CLEAR_TIMEOUT, 'clearImmediate'], CLEAR_TIMEOUT + DASH)\n\nee.on(SET_INTERVAL + START, interval)\nee.on(SET_TIMEOUT + START, timer)\n\nfunction interval (args, obj, type) {\n  args[0] = wrapFn(args[0], 'fn-', null, type)\n}\n\nfunction timer (args, obj, type) {\n  this.method = type\n  this.timerDuration = isNaN(args[1]) ? 0 : +args[1]\n  args[0] = wrapFn(args[0], 'fn-', this, type)\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// wrap-events patches XMLHttpRequest.prototype.addEventListener for us.\nrequire(6)\n\nvar baseEE = require(\"ee\")\nvar ee = baseEE.get('xhr')\nvar wrapFn = require(\"wrap-function\")(ee)\nvar originals = NREUM.o\nvar OrigXHR = originals.XHR\nvar MutationObserver = originals.MO\nvar Promise = originals.PR\nvar setImmediate = originals.SI\n\nvar READY_STATE_CHANGE = 'readystatechange'\n\nvar handlers = ['onload', 'onerror', 'onabort', 'onloadstart', 'onloadend', 'onprogress', 'ontimeout']\nvar pendingXhrs = []\n\nmodule.exports = ee\n\nvar XHR = window.XMLHttpRequest = function (opts) {\n  var xhr = new OrigXHR(opts)\n  try {\n    ee.emit('new-xhr', [xhr], xhr)\n    xhr.addEventListener(READY_STATE_CHANGE, wrapXHR, false)\n  } catch (e) {\n    try {\n      ee.emit('internal-error', [e])\n    } catch (err) {}\n  }\n  return xhr\n}\n\ncopy(OrigXHR, XHR)\n\nXHR.prototype = OrigXHR.prototype\n\nwrapFn.inPlace(XHR.prototype, ['open', 'send'], '-xhr-', getObject)\n\nee.on('send-xhr-start', function (args, xhr) {\n  wrapOnreadystatechange(args, xhr)\n  enqueuePendingXhr(xhr)\n})\nee.on('open-xhr-start', wrapOnreadystatechange)\n\nfunction wrapOnreadystatechange (args, xhr) {\n  wrapFn.inPlace(xhr, ['onreadystatechange'], 'fn-', getObject)\n}\n\nfunction wrapXHR () {\n  var xhr = this\n  var ctx = ee.context(xhr)\n\n  if (xhr.readyState > 3 && !ctx.resolved) {\n    ctx.resolved = true\n    ee.emit('xhr-resolved', [], xhr)\n  }\n\n  wrapFn.inPlace(xhr, handlers, 'fn-', getObject)\n}\n\n// Wrapping the onreadystatechange property of XHRs takes some special tricks.\n//\n// The issue is that the onreadystatechange property may be assigned *after*\n// send() is called against an XHR. This is of particular importance because\n// jQuery uses a single onreadystatechange handler to implement all of the XHR\n// callbacks thtat it provides, and it assigns that property after calling send.\n//\n// There are several 'obvious' approaches to wrapping the onreadystatechange\n// when it's assigned after send:\n//\n// 1. Try to wrap the onreadystatechange handler from a readystatechange\n//    addEventListener callback (the addEventListener callback will fire before\n//    the onreadystatechange callback).\n//\n//      Caveat: this doesn't work in Chrome or Safari, and in fact will cause\n//      the onreadystatechange handler to not be invoked at all during the\n//      firing cycle in which it is wrapped, which may break applications :(\n//\n// 2. Use Object.defineProperty to create a setter for the onreadystatechange\n//    property, and wrap from that setter.\n//\n//      Caveat: onreadystatechange is not a configurable property in Safari or\n//      older versions of the Android browser.\n//\n// 3. Schedule wrapping of the onreadystatechange property using a setTimeout\n//    call issued just before the call to send.\n//\n//      Caveat: sometimes, the onreadystatechange handler fires before the\n//      setTimeout, meaning the wrapping happens too late.\n//\n// The setTimeout approach is closest to what we use here: we want to schedule\n// the wrapping of the onreadystatechange property when send is called, but\n// ensure that our wrapping happens before onreadystatechange has a chance to\n// fire.\n//\n// We achieve this using a hybrid approach:\n//\n// * In browsers that support MutationObserver, we use that to schedule wrapping\n//   of onreadystatechange.\n//\n// * We have discovered that MutationObserver in IE causes a memory leak, so we\n//   now will prefer setImmediate for IE, and use a resolved promise to schedule\n//   the wrapping in Edge (and other browsers that support promises)\n//\n// * In older browsers that don't support MutationObserver, we rely on the fact\n//   that the call to send is probably happening within a callback that we've\n//   already wrapped, and use our existing fn-end event callback to wrap the\n//   onreadystatechange at the end of the current callback.\n//\n\nif (MutationObserver) {\n  var resolved = Promise && Promise.resolve()\n  if (!setImmediate && !Promise) {\n    var toggle = 1\n    var dummyNode = document.createTextNode(toggle)\n    new MutationObserver(drainPendingXhrs).observe(dummyNode, { characterData: true })\n  }\n} else {\n  baseEE.on('fn-end', function (args) {\n    // We don't want to try to wrap onreadystatechange from within a\n    // readystatechange callback.\n    if (args[0] && args[0].type === READY_STATE_CHANGE) return\n    drainPendingXhrs()\n  })\n}\n\nfunction enqueuePendingXhr (xhr) {\n  pendingXhrs.push(xhr)\n  if (MutationObserver) {\n    if (resolved) {\n      resolved.then(drainPendingXhrs)\n    } else if (setImmediate) {\n      setImmediate(drainPendingXhrs)\n    } else {\n      toggle = -toggle\n      dummyNode.data = toggle\n    }\n  }\n}\n\nfunction drainPendingXhrs () {\n  for (var i = 0; i < pendingXhrs.length; i++) {\n    wrapOnreadystatechange([], pendingXhrs[i])\n  }\n  if (pendingXhrs.length) pendingXhrs = []\n}\n\n// Use the object these methods are on as their\n// context store for the event emitter\nfunction getObject (args, obj) {\n  return obj\n}\n\nfunction copy (from, to) {\n  for (var i in from) {\n    to[i] = from[i]\n  }\n  return to\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar uniqueId = require(26)\nvar parseUrl = require(17)\n\nmodule.exports = {\n  generateTracePayload: generateTracePayload,\n  shouldGenerateTrace: shouldGenerateTrace\n}\n\nfunction generateTracePayload (parsedOrigin) {\n  if (!shouldGenerateTrace(parsedOrigin)) {\n    return null\n  }\n\n  var nr = window.NREUM\n  if (!nr.loader_config) {\n    return null\n  }\n\n  var accountId = (nr.loader_config.accountID || '').toString() || null\n  var agentId = (nr.loader_config.agentID || '').toString() || null\n  var trustKey = (nr.loader_config.trustKey || '').toString() || null\n\n  if (!accountId || !agentId) {\n    return null\n  }\n\n  var spanId = uniqueId.generateSpanId()\n  var traceId = uniqueId.generateTraceId()\n  var timestamp = Date.now()\n\n  var payload = {\n    spanId: spanId,\n    traceId: traceId,\n    timestamp: timestamp\n  }\n\n  if (parsedOrigin.sameOrigin ||\n      (isAllowedOrigin(parsedOrigin) && useTraceContextHeadersForCors())) {\n    payload.traceContextParentHeader = generateTraceContextParentHeader(spanId, traceId)\n    payload.traceContextStateHeader = generateTraceContextStateHeader(spanId, timestamp,\n      accountId, agentId, trustKey)\n  }\n\n  if ((parsedOrigin.sameOrigin && !excludeNewrelicHeader()) ||\n      (!parsedOrigin.sameOrigin && isAllowedOrigin(parsedOrigin) && useNewrelicHeaderForCors())) {\n    payload.newrelicHeader = generateTraceHeader(spanId, traceId, timestamp, accountId,\n      agentId, trustKey)\n  }\n\n  return payload\n}\n\nfunction generateTraceContextParentHeader(spanId, traceId) {\n  return '00-' + traceId + '-' + spanId + '-01'\n}\n\nfunction generateTraceContextStateHeader(spanId, timestamp, accountId, appId, trustKey) {\n  var version = 0\n  var transactionId = ''\n  var parentType = 1\n  var sampled = ''\n  var priority = ''\n\n  return trustKey + '@nr=' + version + '-' + parentType + '-' + accountId +\n    '-' + appId + '-' + spanId + '-' + transactionId + '-' + sampled + '-' + priority + '-' + timestamp\n}\n\nfunction generateTraceHeader (spanId, traceId, timestamp, accountId, appId, trustKey) {\n  var hasBtoa = ('btoa' in window && typeof window.btoa === 'function')\n  if (!hasBtoa) {\n    return null\n  }\n\n  var payload = {\n    v: [0, 1],\n    d: {\n      ty: 'Browser',\n      ac: accountId,\n      ap: appId,\n      id: spanId,\n      tr: traceId,\n      ti: timestamp\n    }\n  }\n  if (trustKey && accountId !== trustKey) {\n    payload.d.tk = trustKey\n  }\n\n  return btoa(JSON.stringify(payload))\n}\n\n// return true if DT is enabled and the origin is allowed, either by being\n// same-origin, or included in the allowed list\nfunction shouldGenerateTrace (parsedOrigin) {\n  return isDtEnabled() && isAllowedOrigin(parsedOrigin)\n}\n\nfunction isAllowedOrigin(parsedOrigin) {\n  var allowed = false\n  var dtConfig = {}\n\n  if ('init' in NREUM && 'distributed_tracing' in NREUM.init) {\n    dtConfig = NREUM.init.distributed_tracing\n  }\n\n  if (parsedOrigin.sameOrigin) {\n    allowed = true\n  } else if (dtConfig.allowed_origins instanceof Array) {\n    for (var i = 0; i < dtConfig.allowed_origins.length; i++) {\n      var allowedOrigin = parseUrl(dtConfig.allowed_origins[i])\n      if (parsedOrigin.hostname === allowedOrigin.hostname &&\n          parsedOrigin.protocol === allowedOrigin.protocol &&\n          parsedOrigin.port === allowedOrigin.port) {\n        allowed = true\n        break\n      }\n    }\n  }\n  return allowed\n}\n\nfunction isDtEnabled() {\n  if ('init' in NREUM && 'distributed_tracing' in NREUM.init) {\n    return !!NREUM.init.distributed_tracing.enabled\n  }\n  return false\n}\n\n// exclude the newrelic header for same-origin calls\nfunction excludeNewrelicHeader() {\n  if ('init' in NREUM && 'distributed_tracing' in NREUM.init) {\n    return !!NREUM.init.distributed_tracing.exclude_newrelic_header\n  }\n  return false\n}\n\nfunction useNewrelicHeaderForCors() {\n  if ('init' in NREUM && 'distributed_tracing' in NREUM.init) {\n    return NREUM.init.distributed_tracing.cors_use_newrelic_header !== false\n  }\n  return false\n}\n\nfunction useTraceContextHeadersForCors() {\n  if ('init' in NREUM && 'distributed_tracing' in NREUM.init) {\n    return !!NREUM.init.distributed_tracing.cors_use_tracecontext_headers\n  }\n  return false\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar loader = require(\"loader\")\n\n// Don't instrument Chrome for iOS, it is buggy and acts like there are URL verification issues\nif (!loader.xhrWrappable || loader.disabled) return\n\nvar handle = require(\"handle\")\nvar parseUrl = require(17)\nvar generateTracePayload = require(15).generateTracePayload\nvar ee = require(\"ee\")\nvar handlers = [ 'load', 'error', 'abort', 'timeout' ]\nvar handlersLen = handlers.length\nvar id = require(\"id\")\nvar ffVersion = require(22)\nvar dataSize = require(21)\nvar responseSizeFromXhr = require(18)\n\nvar origXHR = window.XMLHttpRequest\n\n// Declare that we are using xhr instrumentation\nloader.features.xhr = true\n\nrequire(14)\nrequire(7)\n\n// Setup the context for each new xhr object\nee.on('new-xhr', function (xhr) {\n  var ctx = this\n  ctx.totalCbs = 0\n  ctx.called = 0\n  ctx.cbTime = 0\n  ctx.end = end\n  ctx.ended = false\n  ctx.xhrGuids = {}\n  ctx.lastSize = null\n  ctx.loadCaptureCalled = false\n\n  xhr.addEventListener('load', function (event) {\n    captureXhrData(ctx, xhr)\n  }, false)\n\n  // In Firefox 34+, XHR ProgressEvents report pre-content-decoding sizes via\n  // their 'loaded' property, rather than post-decoding sizes. We want\n  // post-decoding sizes for consistency with browsers where that's all we have.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1227674\n  //\n  // In really old versions of Firefox (older than somewhere between 5 and 10),\n  // we don't reliably get a final XHR ProgressEvent which reflects the full\n  // size of the transferred resource.\n  //\n  // So, in both of these cases, we fall back to not using ProgressEvents to\n  // measure XHR sizes.\n\n  if (ffVersion && (ffVersion > 34 || ffVersion < 10)) return\n\n  // In Opera, ProgressEvents report loaded values that are too high.\n  if (window.opera) return\n\n  xhr.addEventListener('progress', function (event) {\n    ctx.lastSize = event.loaded\n  }, false)\n})\n\nee.on('open-xhr-start', function (args) {\n  this.params = { method: args[0] }\n  addUrl(this, args[1])\n  this.metrics = {}\n})\n\nee.on('open-xhr-end', function (args, xhr) {\n  if ('loader_config' in NREUM && 'xpid' in NREUM.loader_config && this.sameOrigin) {\n    xhr.setRequestHeader('X-NewRelic-ID', NREUM.loader_config.xpid)\n  }\n\n  var payload = generateTracePayload(this.parsedOrigin)\n  if (payload) {\n    var added = false\n    if (payload.newrelicHeader) {\n      xhr.setRequestHeader('newrelic', payload.newrelicHeader)\n      added = true\n    }\n    if (payload.traceContextParentHeader) {\n      xhr.setRequestHeader('traceparent', payload.traceContextParentHeader)\n      if (payload.traceContextStateHeader) {\n        xhr.setRequestHeader('tracestate', payload.traceContextStateHeader)\n      }\n      added = true\n    }\n    if (added) {\n      this.dt = payload\n    }\n  }\n})\n\nee.on('send-xhr-start', function (args, xhr) {\n  var metrics = this.metrics\n  var data = args[0]\n  var context = this\n\n  if (metrics && data) {\n    var size = dataSize(data)\n    if (size) metrics.txSize = size\n  }\n\n  this.startTime = loader.now()\n\n  this.listener = function (evt) {\n    try {\n      if (evt.type === 'abort' && !(context.loadCaptureCalled)) {\n        context.params.aborted = true\n      }\n      if (evt.type !== 'load' || (context.called === context.totalCbs) && (context.onloadCalled || typeof (xhr.onload) !== 'function')) context.end(xhr)\n    } catch (e) {\n      try {\n        ee.emit('internal-error', [e])\n      } catch (err) {}\n    }\n  }\n\n  for (var i = 0; i < handlersLen; i++) {\n    xhr.addEventListener(handlers[i], this.listener, false)\n  }\n})\n\nee.on('xhr-cb-time', function (time, onload, xhr) {\n  this.cbTime += time\n  if (onload) this.onloadCalled = true\n  else this.called += 1\n  if ((this.called === this.totalCbs) && (this.onloadCalled || typeof (xhr.onload) !== 'function')) this.end(xhr)\n})\n\nee.on('xhr-load-added', function (cb, useCapture) {\n  // Ignore if the same arguments are passed to addEventListener twice\n  var idString = '' + id(cb) + !!useCapture\n  if (!this.xhrGuids || this.xhrGuids[idString]) return\n  this.xhrGuids[idString] = true\n\n  this.totalCbs += 1\n})\n\nee.on('xhr-load-removed', function (cb, useCapture) {\n  // Ignore if event listener didn't exist for this xhr object\n  var idString = '' + id(cb) + !!useCapture\n  if (!this.xhrGuids || !this.xhrGuids[idString]) return\n  delete this.xhrGuids[idString]\n\n  this.totalCbs -= 1\n})\n\n// Listen for load listeners to be added to xhr objects\nee.on('addEventListener-end', function (args, xhr) {\n  if (xhr instanceof origXHR && args[0] === 'load') ee.emit('xhr-load-added', [args[1], args[2]], xhr)\n})\n\nee.on('removeEventListener-end', function (args, xhr) {\n  if (xhr instanceof origXHR && args[0] === 'load') ee.emit('xhr-load-removed', [args[1], args[2]], xhr)\n})\n\n// Listen for those load listeners to be called.\nee.on('fn-start', function (args, xhr, methodName) {\n  if (xhr instanceof origXHR) {\n    if (methodName === 'onload') this.onload = true\n    if ((args[0] && args[0].type) === 'load' || this.onload) this.xhrCbStart = loader.now()\n  }\n})\n\nee.on('fn-end', function (args, xhr) {\n  if (this.xhrCbStart) ee.emit('xhr-cb-time', [loader.now() - this.xhrCbStart, this.onload, xhr], xhr)\n})\n\nee.on('fetch-before-start', function (args) {\n  var opts = args[1] || {}\n  var url\n  // argument is USVString\n  if (typeof args[0] === 'string') {\n    url = args[0]\n  // argument is Request object\n  } else if (args[0] && args[0].url) {\n    url = args[0].url\n  // argument is URL object\n  } else if (window.URL && args[0] && args[0] instanceof URL) {\n    url = args[0].href\n  }\n\n  if (url) {\n    this.parsedOrigin = parseUrl(url)\n    this.sameOrigin = this.parsedOrigin.sameOrigin\n  }\n\n  var payload = generateTracePayload(this.parsedOrigin)\n  if (!payload || (!payload.newrelicHeader && !payload.traceContextParentHeader)) {\n    return\n  }\n\n  if (typeof args[0] === 'string' || (window.URL && args[0] && args[0] instanceof URL)) {\n    var clone = {}\n\n    for (var key in opts) {\n      clone[key] = opts[key]\n    }\n\n    clone.headers = new Headers(opts.headers || {})\n    if (addHeaders(clone.headers, payload)) {\n      this.dt = payload\n    }\n\n    if (args.length > 1) {\n      args[1] = clone\n    } else {\n      args.push(clone)\n    }\n  } else if (args[0] && args[0].headers) {\n    if (addHeaders(args[0].headers, payload)) {\n      this.dt = payload\n    }\n  }\n\n  function addHeaders(headersObj, payload) {\n    var added = false\n    if (payload.newrelicHeader) {\n      headersObj.set('newrelic', payload.newrelicHeader)\n      added = true\n    }\n    if (payload.traceContextParentHeader) {\n      headersObj.set('traceparent', payload.traceContextParentHeader)\n      if (payload.traceContextStateHeader) {\n        headersObj.set('tracestate', payload.traceContextStateHeader)\n      }\n      added = true\n    }\n    return added\n  }\n})\n\n// Create report for XHR request that has finished\nfunction end (xhr) {\n  var params = this.params\n  var metrics = this.metrics\n\n  if (this.ended) return\n  this.ended = true\n\n  for (var i = 0; i < handlersLen; i++) {\n    xhr.removeEventListener(handlers[i], this.listener, false)\n  }\n\n  if (params.aborted) return\n  metrics.duration = loader.now() - this.startTime\n  if (!this.loadCaptureCalled && xhr.readyState === 4) {\n    captureXhrData(this, xhr)\n  } else if (params.status == null) {\n    params.status = 0\n  }\n\n  // Always send cbTime, even if no noticeable time was taken.\n  metrics.cbTime = this.cbTime\n  ee.emit('xhr-done', [xhr], xhr)\n  handle('xhr', [params, metrics, this.startTime])\n}\n\nfunction addUrl (ctx, url) {\n  var parsed = parseUrl(url)\n  var params = ctx.params\n\n  params.host = parsed.hostname + ':' + parsed.port\n  params.pathname = parsed.pathname\n  ctx.parsedOrigin = parseUrl(url)\n  ctx.sameOrigin = ctx.parsedOrigin.sameOrigin\n}\n\nfunction captureXhrData (ctx, xhr) {\n  ctx.params.status = xhr.status\n\n  var size = responseSizeFromXhr(xhr, ctx.lastSize)\n  if (size) ctx.metrics.rxSize = size\n\n  if (ctx.sameOrigin) {\n    var header = xhr.getResponseHeader('X-NewRelic-App-Data')\n    if (header) {\n      ctx.params.cat = header.split(', ').pop()\n    }\n  }\n\n  ctx.loadCaptureCalled = true\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar stringsToParsedUrls = {}\n\nmodule.exports = function parseUrl (url) {\n  if (url in stringsToParsedUrls) {\n    return stringsToParsedUrls[url]\n  }\n\n  var urlEl = document.createElement('a')\n  var location = window.location\n  var ret = {}\n\n  // Use an anchor dom element to resolve the url natively.\n  urlEl.href = url\n\n  ret.port = urlEl.port\n\n  var firstSplit = urlEl.href.split('://')\n\n  if (!ret.port && firstSplit[1]) {\n    ret.port = firstSplit[1].split('/')[0].split('@').pop().split(':')[1]\n  }\n  if (!ret.port || ret.port === '0') ret.port = (firstSplit[0] === 'https' ? '443' : '80')\n\n  // Host not provided in IE for relative urls\n  ret.hostname = (urlEl.hostname || location.hostname)\n\n  ret.pathname = urlEl.pathname\n\n  ret.protocol = firstSplit[0]\n\n  // Pathname sometimes doesn't have leading slash (IE 8 and 9)\n  if (ret.pathname.charAt(0) !== '/') ret.pathname = '/' + ret.pathname\n\n  // urlEl.protocol is ':' in old ie when protocol is not specified\n  var sameProtocol = !urlEl.protocol || urlEl.protocol === ':' || urlEl.protocol === location.protocol\n  var sameDomain = urlEl.hostname === document.domain && urlEl.port === location.port\n\n  // urlEl.hostname is not provided by IE for relative urls, but relative urls are also same-origin\n  ret.sameOrigin = sameProtocol && (!urlEl.hostname || sameDomain)\n\n  // Only cache if url doesn't have a path\n  if (ret.pathname === '/') {\n    stringsToParsedUrls[url] = ret\n  }\n\n  return ret\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar dataSize = require(21)\n\nmodule.exports = responseSizeFromXhr\n\nfunction responseSizeFromXhr (xhr, lastSize) {\n  var type = xhr.responseType\n  if (type === 'json' && lastSize !== null) return lastSize\n  // Caution! Chrome throws an error if you try to access xhr.responseText for binary data\n  if (type === 'arraybuffer' || type === 'blob' || type === 'json') {\n    return dataSize(xhr.response)\n  } else if (type === 'text' || type === '' || type === undefined) {  // empty string type defaults to 'text'\n    return dataSize(xhr.responseText)\n  } else {  // e.g. ms-stream and document (we do not currently determine the size of Document objects)\n    return undefined\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar handle = require(\"handle\")\nvar mapOwn = require(29)\nvar slice = require(30)\nvar tracerEE = require(\"ee\").get('tracer')\nvar loader = require(\"loader\")\n\nvar nr = NREUM\nif (typeof (window.newrelic) === 'undefined') newrelic = nr\n\nvar asyncApiFns = [\n  'setPageViewName',\n  'setCustomAttribute',\n  'setErrorHandler',\n  'finished',\n  'addToTrace',\n  'inlineHit',\n  'addRelease'\n]\n\nvar prefix = 'api-'\nvar spaPrefix = prefix + 'ixn-'\n\n// Setup stub functions that queue calls for later processing.\nmapOwn(asyncApiFns, function (num, fnName) {\n  nr[fnName] = apiCall(prefix + fnName, true, 'api')\n})\n\nnr.addPageAction = apiCall(prefix + 'addPageAction', true)\nnr.setCurrentRouteName = apiCall(prefix + 'routeName', true)\n\nmodule.exports = newrelic\n\nnr.interaction = function () {\n  return new InteractionHandle().get()\n}\n\nfunction InteractionHandle () {}\n\nvar InteractionApiProto = InteractionHandle.prototype = {\n  createTracer: function (name, cb) {\n    var contextStore = {}\n    var ixn = this\n    var hasCb = typeof cb === 'function'\n    handle(spaPrefix + 'tracer', [loader.now(), name, contextStore], ixn)\n    return function () {\n      tracerEE.emit((hasCb ? '' : 'no-') + 'fn-start', [loader.now(), ixn, hasCb], contextStore)\n      if (hasCb) {\n        try {\n          return cb.apply(this, arguments)\n        } catch (err) {\n          tracerEE.emit('fn-err', [arguments, this, err], contextStore)\n          // the error came from outside the agent, so don't swallow\n          throw err\n        } finally {\n          tracerEE.emit('fn-end', [loader.now()], contextStore)\n        }\n      }\n    }\n  }\n}\n\nmapOwn('actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get'.split(','), function addApi (n, name) {\n  InteractionApiProto[name] = apiCall(spaPrefix + name)\n})\n\nfunction apiCall (name, notSpa, bufferGroup) {\n  return function () {\n    handle(name, [loader.now()].concat(slice(arguments)), notSpa ? null : this, bufferGroup)\n    return notSpa ? void 0 : this\n  }\n}\n\nnewrelic.noticeError = function (err, customAttributes) {\n  if (typeof err === 'string') err = new Error(err)\n  handle('err', [err, loader.now(), false, customAttributes])\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = {\n  getConfiguration: getConfiguration\n}\n\nfunction getConfiguration(path) {\n  if (!NREUM.init) return\n  var val = NREUM.init\n  var parts = path.split('.')\n  for (var i = 0; i < parts.length - 1; i++) {\n    val = val[parts[i]]\n    if (typeof val !== 'object') return\n  }\n  val = val[parts[parts.length - 1]]\n  return val\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = function dataSize (data) {\n  if (typeof data === 'string' && data.length) return data.length\n  if (typeof data !== 'object') return undefined\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer && data.byteLength) return data.byteLength\n  if (typeof Blob !== 'undefined' && data instanceof Blob && data.size) return data.size\n  if (typeof FormData !== 'undefined' && data instanceof FormData) return undefined\n\n  try {\n    return JSON.stringify(data).length\n  } catch (e) {\n    return undefined\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ffVersion = 0\nvar match = navigator.userAgent.match(/Firefox[\\/\\s](\\d+\\.\\d+)/)\nif (match) ffVersion = +match[1]\n\nmodule.exports = ffVersion\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar lastTimestamp = new Date().getTime()\nvar offset = lastTimestamp\n\nvar performanceCheck = require(31)\n\nmodule.exports = now\nmodule.exports.offset = offset\nmodule.exports.getLastTimestamp = getLastTimestamp\n\nfunction now () {\n  if (performanceCheck.exists && performance.now) {\n    return Math.round(performance.now())\n  }\n  // ensure a new timestamp is never smaller than a previous timestamp\n  return (lastTimestamp = Math.max(new Date().getTime(), lastTimestamp)) - offset\n}\n\nfunction getLastTimestamp() {\n  return lastTimestamp\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = protocolAllowed\n\nfunction protocolAllowed (location) {\n  return !!(location && location.protocol && location.protocol !== 'file:')\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// collect page view timings unless the feature is explicitly disabled\nif ('init' in NREUM && 'page_view_timing' in NREUM.init &&\n  'enabled' in NREUM.init.page_view_timing &&\n  NREUM.init.page_view_timing.enabled === false) {\n  return\n}\n\nvar handle = require(\"handle\")\nvar loader = require(\"loader\")\nvar subscribeToVisibilityChange = require(28)\n\nvar origEvent = NREUM.o.EV\n\n// paint metrics\nfunction perfObserver(list, observer) {\n  var entries = list.getEntries()\n  entries.forEach(function (entry) {\n    if (entry.name === 'first-paint') {\n      handle('timing', ['fp', Math.floor(entry.startTime)])\n    } else if (entry.name === 'first-contentful-paint') {\n      handle('timing', ['fcp', Math.floor(entry.startTime)])\n    }\n  })\n}\n\n// largest contentful paint\nfunction lcpObserver(list, observer) {\n  var entries = list.getEntries()\n  if (entries.length > 0) {\n    handle('lcp', [entries[entries.length - 1]])\n  }\n}\n\nfunction clsObserver(list) {\n  list.getEntries().forEach(function(entry) {\n    if (!entry.hadRecentInput) {\n      handle('cls', [entry])\n    }\n  })\n}\n\nvar performanceObserver\nvar lcpPerformanceObserver\nvar clsPerformanceObserver\nif ('PerformanceObserver' in window && typeof window.PerformanceObserver === 'function') {\n  // passing in an unknown entry type to observer could throw an exception\n  performanceObserver = new PerformanceObserver(perfObserver) // eslint-disable-line no-undef\n  try {\n    performanceObserver.observe({entryTypes: ['paint']})\n  } catch (e) {}\n\n  lcpPerformanceObserver = new PerformanceObserver(lcpObserver) // eslint-disable-line no-undef\n  try {\n    lcpPerformanceObserver.observe({entryTypes: ['largest-contentful-paint']})\n  } catch (e) {}\n\n  clsPerformanceObserver = new PerformanceObserver(clsObserver) // eslint-disable-line no-undef\n  try {\n    clsPerformanceObserver.observe({type: 'layout-shift', buffered: true})\n  } catch (e) {}\n}\n\n// first interaction and first input delay\nif ('addEventListener' in document) {\n  var fiRecorded = false\n  var allowedEventTypes = ['click', 'keydown', 'mousedown', 'pointerdown', 'touchstart']\n  allowedEventTypes.forEach(function (e) {\n    document.addEventListener(e, captureInteraction, false)\n  })\n}\n\nfunction captureInteraction(evt) {\n  if (evt instanceof origEvent && !fiRecorded) {\n    var fi = Math.round(evt.timeStamp)\n    var attributes = {\n      type: evt.type\n    }\n\n    // The value of Event.timeStamp is epoch time in some old browser, and relative\n    // timestamp in newer browsers. We assume that large numbers represent epoch time.\n    if (fi <= loader.now()) {\n      attributes['fid'] = loader.now() - fi\n    } else if (fi > loader.offset && fi <= Date.now()) {\n      fi = fi - loader.offset\n      attributes['fid'] = loader.now() - fi\n    } else {\n      fi = loader.now()\n    }\n\n    fiRecorded = true\n    handle('timing', ['fi', fi, attributes])\n  }\n}\n\n// page visibility events\nsubscribeToVisibilityChange(captureVisibilityChange)\n\nfunction captureVisibilityChange(state) {\n  handle('pageHide', [loader.now(), state])\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = {\n  generateUuid: generateUuid,\n  generateSpanId: generateSpanId,\n  generateTraceId: generateTraceId\n}\n\nfunction generateUuid () {\n  var randomVals = null\n  var rvIndex = 0\n  var crypto = window.crypto || window.msCrypto\n  if (crypto && crypto.getRandomValues) {\n    randomVals = crypto.getRandomValues(new Uint8Array(31))\n  }\n\n  function getRandomValue () {\n    if (randomVals) {\n      // same as % 16\n      return randomVals[rvIndex++] & 15\n    } else {\n      return Math.random() * 16 | 0\n    }\n  }\n\n  // v4 UUID\n  var template = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n  var id = ''\n  var c\n  for (var i = 0; i < template.length; i++) {\n    c = template[i]\n    if (c === 'x') {\n      id += getRandomValue().toString(16)\n    } else if (c === 'y') {\n      // this is the uuid variant per spec (8, 9, a, b)\n      // % 4, then shift to get values 8-11\n      c = getRandomValue() & 0x3 | 0x8\n      id += c.toString(16)\n    } else {\n      id += c\n    }\n  }\n\n  return id\n}\n\n// 16-character hex string (per DT spec)\nfunction generateSpanId () {\n  return generateRandomHexString(16)\n}\n\n// 32-character hex string (per DT spec)\nfunction generateTraceId() {\n  return generateRandomHexString(32)\n}\n\nfunction generateRandomHexString(length) {\n  var randomVals = null\n  var rvIndex = 0\n  var crypto = window.crypto || window.msCrypto\n  if (crypto && crypto.getRandomValues && Uint8Array) {\n    randomVals = crypto.getRandomValues(new Uint8Array(31))\n  }\n\n  var chars = []\n  for (var i = 0; i < length; i++) {\n    chars.push(getRandomValue().toString(16))\n  }\n  return chars.join('')\n\n  function getRandomValue () {\n    if (randomVals) {\n      // same as % 16\n      return randomVals[rvIndex++] & 15\n    } else {\n      return Math.random() * 16 | 0\n    }\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Feature-detection is much preferred over using User Agent to detect browser.\n// However, there are cases where feature detection is not possible, for example\n// when a specific version of a browser has a bug that requires a workaround in just\n// that version.\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#Browser_Name\nvar agentName = null\nvar agentVersion = null\nvar safari = /Version\\/(\\S+)\\s+Safari/\n\nif (navigator.userAgent) {\n  var userAgent = navigator.userAgent\n  var parts = userAgent.match(safari)\n\n  if (parts && userAgent.indexOf('Chrome') === -1 &&\n      userAgent.indexOf('Chromium') === -1) {\n    agentName = 'Safari'\n    agentVersion = parts[1]\n  }\n}\n\nmodule.exports = {\n  agent: agentName,\n  version: agentVersion,\n  match: match\n}\n\nfunction match (name, version) {\n  if (!agentName) {\n    return false\n  }\n\n  if (name !== agentName) {\n    return false\n  }\n\n  // version not provided, only match by name\n  if (!version) {\n    return true\n  }\n\n  // version provided, but not detected - not reliable match\n  if (!agentVersion) {\n    return false\n  }\n\n  var detectedParts = agentVersion.split('.')\n  var requestedParts = version.split('.')\n  for (var i = 0; i < requestedParts.length; i++) {\n    if (requestedParts[i] !== detectedParts[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = subscribeToVisibilityChange\n\nvar hidden, eventName, state\n\nif (typeof document.hidden !== 'undefined') {\n  hidden = 'hidden'\n  eventName = 'visibilitychange'\n  state = 'visibilityState'\n} else if (typeof document.msHidden !== 'undefined') {\n  hidden = 'msHidden'\n  eventName = 'msvisibilitychange'\n} else if (typeof document.webkitHidden !== 'undefined') {\n  hidden = 'webkitHidden'\n  eventName = 'webkitvisibilitychange'\n  state = 'webkitVisibilityState'\n}\n\nfunction subscribeToVisibilityChange(cb) {\n  if ('addEventListener' in document && eventName) {\n    document.addEventListener(eventName, handleVisibilityChange, false)\n  }\n\n  function handleVisibilityChange() {\n    if (state && document[state]) {\n      cb(document[state])\n    } else if (document[hidden]) {\n      cb('hidden')\n    } else {\n      cb('visible')\n    }\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar has = Object.prototype.hasOwnProperty\n\nmodule.exports = mapOwn\n\nfunction mapOwn (obj, fn) {\n  var results = []\n  var key = ''\n  var i = 0\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      results[i] = fn(key, obj[key])\n      i += 1\n    }\n  }\n\n  return results\n}\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"npm\" -o ./npm/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Slices the `collection` from the `start` index up to, but not including,\n * the `end` index.\n *\n * Note: This function is used instead of `Array#slice` to support node lists\n * in IE < 9 and to ensure dense arrays are returned.\n *\n * @private\n * @param {Array|Object|string} collection The collection to slice.\n * @param {number} start The start index.\n * @param {number} end The end index.\n * @returns {Array} Returns the new array.\n */\nfunction slice(array, start, end) {\n  start || (start = 0);\n  if (typeof end == 'undefined') {\n    end = array ? array.length : 0;\n  }\n  var index = -1,\n      length = end - start || 0,\n      result = Array(length < 0 ? 0 : length);\n\n  while (++index < length) {\n    result[index] = array[start + index];\n  }\n  return result;\n}\n\nmodule.exports = slice;\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nmodule.exports = {\n  exists: typeof (window.performance) !== 'undefined' && window.performance.timing && typeof (window.performance.timing.navigationStart) !== 'undefined'\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ctxId = 'nr@context'\nvar getOrSet = require(\"gos\")\nvar mapOwn = require(29)\n\nvar eventBuffer = {}\nvar emitters = {}\n\nvar baseEE = module.exports = ee()\nmodule.exports.getOrSetContext = getOrSetContext\n\nbaseEE.backlog = eventBuffer\n\nfunction EventContext () {}\n\nfunction ee (old) {\n  var handlers = {}\n  var bufferGroupMap = {}\n\n  var emitter = {\n    on: addEventListener,\n    addEventListener: addEventListener,\n    removeEventListener: removeEventListener,\n    emit: emit,\n    get: getOrCreate,\n    listeners: listeners,\n    context: context,\n    buffer: bufferEventsByGroup,\n    abort: abortIfNotLoaded,\n    aborted: false\n  }\n\n  return emitter\n\n  function context (contextOrStore) {\n    if (contextOrStore && contextOrStore instanceof EventContext) {\n      return contextOrStore\n    } else if (contextOrStore) {\n      return getOrSet(contextOrStore, ctxId, getNewContext)\n    } else {\n      return getNewContext()\n    }\n  }\n\n  function emit (type, args, contextOrStore, force, bubble) {\n    if (bubble !== false) bubble = true\n    if (baseEE.aborted && !force) { return }\n    if (old && bubble) old(type, args, contextOrStore)\n\n    var ctx = context(contextOrStore)\n    var handlersArray = listeners(type)\n    var len = handlersArray.length\n\n    // Extremely verbose debug logging\n    // if ([/^xhr/].map(function (match) {return type.match(match)}).filter(Boolean).length) {\n    //  console.log(type + ' args:')\n    //  console.log(args)\n    //  console.log(type + ' handlers array:')\n    //  console.log(handlersArray)\n    //  console.log(type + ' context:')\n    //  console.log(ctx)\n    //  console.log(type + ' ctxStore:')\n    //  console.log(ctxStore)\n    // }\n\n    // Apply each handler function in the order they were added\n    // to the context with the arguments\n\n    for (var i = 0; i < len; i++) handlersArray[i].apply(ctx, args)\n\n    // Buffer after emitting for consistent ordering\n    var bufferGroup = eventBuffer[bufferGroupMap[type]]\n    if (bufferGroup) {\n      bufferGroup.push([emitter, type, args, ctx])\n    }\n\n    // Return the context so that the module that emitted can see what was done.\n    return ctx\n  }\n\n  function addEventListener (type, fn) {\n    // Retrieve type from handlers, if it doesn't exist assign the default and retrieve it.\n    handlers[type] = listeners(type).concat(fn)\n  }\n\n  function removeEventListener (type, fn) {\n    var listeners = handlers[type]\n    if (!listeners) return\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === fn) {\n        listeners.splice(i, 1)\n      }\n    }\n  }\n\n  function listeners (type) {\n    return handlers[type] || []\n  }\n\n  function getOrCreate (name) {\n    return (emitters[name] = emitters[name] || ee(emit))\n  }\n\n  function bufferEventsByGroup (types, group) {\n    mapOwn(types, function (i, type) {\n      group = group || 'feature'\n      bufferGroupMap[type] = group\n      if (!(group in eventBuffer)) {\n        eventBuffer[group] = []\n      }\n    })\n  }\n}\n\n// get context object from store object, or create if does not exist\nfunction getOrSetContext(obj) {\n  return getOrSet(obj, ctxId, getNewContext)\n}\n\nfunction getNewContext () {\n  return new EventContext()\n}\n\n// abort should be called 30 seconds after the page has started running\n// We should drop our data and stop collecting if we still have a backlog, which\n// signifies the rest of the agent wasn't loaded\nfunction abortIfNotLoaded () {\n  if (eventBuffer.api || eventBuffer.feature) {\n    baseEE.aborted = true\n    eventBuffer = baseEE.backlog = {}\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar has = Object.prototype.hasOwnProperty\n\nmodule.exports = getOrSet\n\n// Always returns the current value of obj[prop], even if it has to set it first\nfunction getOrSet (obj, prop, getVal) {\n  // If the value exists return it.\n  if (has.call(obj, prop)) return obj[prop]\n\n  var val = getVal()\n\n  // Attempt to set the property so it's not enumerable\n  if (Object.defineProperty && Object.keys) {\n    try {\n      Object.defineProperty(obj, prop, {\n        value: val, // old IE inherits non-write-ability\n        writable: true,\n        enumerable: false\n      })\n\n      return val\n    } catch (e) {\n      // Can't report internal errors,\n      // because GOS is a dependency of the reporting mechanisms\n    }\n  }\n\n  // fall back to setting normally\n  obj[prop] = val\n  return val\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\").get('handle')\n\n// Exported for register-handler to attach to.\nmodule.exports = handle\nhandle.ee = ee\n\nfunction handle (type, args, ctx, group) {\n  ee.buffer([type], group)\n  ee.emit(type, args, ctx)\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Start assigning ids at 1 so 0 can always be used for window, without\n// actually setting it (which would create a global variable).\nvar index = 1\nvar prop = 'nr@id'\nvar getOrSet = require(\"gos\")\n\nmodule.exports = id\n\n// Always returns id of obj, may tag obj with an id in the process.\nfunction id (obj) {\n  var type = typeof obj\n  // We can only tag objects, functions, and arrays with ids.\n  // For all primitive values we instead return -1.\n  if (!obj || !(type === 'object' || type === 'function')) return -1\n  if (obj === window) return 0\n\n  return getOrSet(obj, prop, function () { return index++ })\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar now = require(23)\nvar handle = require(\"handle\")\nvar mapOwn = require(29)\nvar ee = require(\"ee\")\nvar userAgent = require(27)\nvar protocolAllowed = require(24)\nvar config = require(20)\n\nvar scheme = (config.getConfiguration('ssl') === false) ? 'http' : 'https'\n\nvar win = window\nvar doc = win.document\n\nvar ADD_EVENT_LISTENER = 'addEventListener'\nvar ATTACH_EVENT = 'attachEvent'\nvar XHR = win.XMLHttpRequest\nvar XHR_PROTO = XHR && XHR.prototype\n\nvar disabled = !protocolAllowed(win.location)\n\nNREUM.o = {\n  ST: setTimeout,\n  SI: win.setImmediate,\n  CT: clearTimeout,\n  XHR: XHR,\n  REQ: win.Request,\n  EV: win.Event,\n  PR: win.Promise,\n  MO: win.MutationObserver\n}\n\nvar origin = '' + location\nvar defInfo = {\n  beacon: 'bam.nr-data.net',\n  errorBeacon: 'bam.nr-data.net',\n  agent: 'js-agent.newrelic.com/nr-dev.js'\n}\n\nvar xhrWrappable = XHR &&\n  XHR_PROTO &&\n  XHR_PROTO[ADD_EVENT_LISTENER] &&\n  !/CriOS/.test(navigator.userAgent)\n\nvar exp = module.exports = {\n  offset: now.getLastTimestamp(),\n  now: now,\n  origin: origin,\n  features: {},\n  xhrWrappable: xhrWrappable,\n  userAgent: userAgent,\n  disabled: disabled\n}\n\nif (!protocolAllowed(win.location)) return\n\n// api loads registers several event listeners, but does not have any exports\nrequire(19)\n\n// paint timings\nrequire(25)\n\nif (doc[ADD_EVENT_LISTENER]) {\n  doc[ADD_EVENT_LISTENER]('DOMContentLoaded', loaded, false)\n  win[ADD_EVENT_LISTENER]('load', windowLoaded, false)\n} else {\n  doc[ATTACH_EVENT]('onreadystatechange', stateChange)\n  win[ATTACH_EVENT]('onload', windowLoaded)\n}\n\nhandle('mark', ['firstbyte', now.getLastTimestamp()], null, 'api')\n\nvar loadFired = 0\nfunction windowLoaded () {\n  if (loadFired++) return\n  var info = exp.info = NREUM.info\n\n  var firstScript = doc.getElementsByTagName('script')[0]\n  setTimeout(ee.abort, 30000)\n\n  if (!(info && info.licenseKey && info.applicationID && firstScript)) {\n    return ee.abort()\n  }\n\n  mapOwn(defInfo, function (key, val) {\n    // this will overwrite any falsy value in config\n    // This is intentional because agents may write an empty string to\n    // the agent key in the config, in which case we want to use the default\n    if (!info[key]) info[key] = val\n  })\n\n  var ts = now()\n  handle('mark', ['onload', ts + exp.offset], null, 'api')\n  handle('timing', ['load', ts])\n\n  var agent = doc.createElement('script')\n  agent.src = scheme + '://' + info.agent\n  firstScript.parentNode.insertBefore(agent, firstScript)\n}\n\nfunction stateChange () {\n  if (doc.readyState === 'complete') loaded()\n}\n\nfunction loaded () {\n  handle('mark', ['domContent', now() + exp.offset], null, 'api')\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar ee = require(\"ee\")\nvar slice = require(30)\nvar flag = 'nr@original'\nvar has = Object.prototype.hasOwnProperty\nvar inWrapper = false\n\nmodule.exports = createWrapperWithEmitter\nmodule.exports.wrapFunction = wrapFunction\nmodule.exports.wrapInPlace = wrapInPlace\nmodule.exports.argsToArray = argsToArray\n\nfunction createWrapperWithEmitter(emitter, always) {\n  emitter || (emitter = ee)\n\n  wrapFn.inPlace = inPlace\n  wrapFn.flag = flag\n\n  return wrapFn\n\n  function wrapFn (fn, prefix, getContext, methodName, bubble) {\n    // Unless fn is both wrappable and unwrapped, return it unchanged.\n    if (notWrappable(fn)) return fn\n\n    if (!prefix) prefix = ''\n\n    nrWrapper[flag] = fn\n    copy(fn, nrWrapper, emitter)\n    return nrWrapper\n\n    function nrWrapper () {\n      var args\n      var originalThis\n      var ctx\n      var result\n\n      try {\n        originalThis = this\n        args = slice(arguments)\n\n        if (typeof getContext === 'function') {\n          ctx = getContext(args, originalThis)\n        } else {\n          ctx = getContext || {}\n        }\n      } catch (e) {\n        report([e, '', [args, originalThis, methodName], ctx], emitter)\n      }\n\n      // Warning: start events may mutate args!\n      safeEmit(prefix + 'start', [args, originalThis, methodName], ctx, bubble)\n\n      try {\n        result = fn.apply(originalThis, args)\n        return result\n      } catch (err) {\n        safeEmit(prefix + 'err', [args, originalThis, err], ctx, bubble)\n\n        // rethrow error so we don't effect execution by observing.\n        throw err\n      } finally {\n        // happens no matter what.\n        safeEmit(prefix + 'end', [args, originalThis, result], ctx, bubble)\n      }\n    }\n  }\n\n  function inPlace (obj, methods, prefix, getContext, bubble) {\n    if (!prefix) prefix = ''\n    // If prefix starts with '-' set this boolean to add the method name to\n    // the prefix before passing each one to wrap.\n    var prependMethodPrefix = (prefix.charAt(0) === '-')\n    var fn\n    var method\n    var i\n\n    for (i = 0; i < methods.length; i++) {\n      method = methods[i]\n      fn = obj[method]\n\n      // Unless fn is both wrappable and unwrapped bail,\n      // so we don't add extra properties with undefined values.\n      if (notWrappable(fn)) continue\n\n      obj[method] = wrapFn(fn, (prependMethodPrefix ? method + prefix : prefix), getContext, method, bubble)\n    }\n  }\n\n  function safeEmit (evt, arr, store, bubble) {\n    if (inWrapper && !always) return\n    var prev = inWrapper\n    inWrapper = true\n    try {\n      emitter.emit(evt, arr, store, always, bubble)\n    } catch (e) {\n      report([e, evt, arr, store], emitter)\n    }\n    inWrapper = prev\n  }\n}\n\nfunction report (args, emitter) {\n  emitter || (emitter = ee)\n  try {\n    emitter.emit('internal-error', args)\n  } catch (err) {}\n}\n\nfunction copy (from, to, emitter) {\n  if (Object.defineProperty && Object.keys) {\n    // Create accessors that proxy to actual function\n    try {\n      var keys = Object.keys(from)\n      keys.forEach(function (key) {\n        Object.defineProperty(to, key, {\n          get: function () { return from[key] },\n          set: function (val) { from[key] = val; return val }\n        })\n      })\n      return to\n    } catch (e) {\n      report([e], emitter)\n    }\n  }\n  // fall back to copying properties\n  for (var i in from) {\n    if (has.call(from, i)) {\n      to[i] = from[i]\n    }\n  }\n  return to\n}\n\nfunction notWrappable (fn) {\n  return !(fn && fn instanceof Function && fn.apply && !fn[flag])\n}\n\nfunction wrapFunction(fn, wrapper) {\n  var wrapped = wrapper(fn)\n  wrapped[flag] = fn\n  copy(fn, wrapped, ee)\n  return wrapped\n}\n\nfunction wrapInPlace(obj, fnName, wrapper) {\n  var fn = obj[fnName]\n  obj[fnName] = wrapFunction(fn, wrapper)\n}\n\nfunction argsToArray() {\n  var len = arguments.length\n  var arr = new Array(len)\n  for (var i = 0; i < len; ++i) {\n    arr[i] = arguments[i]\n  }\n  return arr\n}\n"]}